# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from itertools import combinations
import datetime

class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(1027, 748)
                MainWindow.setStyleSheet("*{\n"
        "    border:none;\n"
        "    background-color:transparent;\n"
        "    background:none;\n"
        "    padding:0;\n"
        "    margin:0;\n"
        "    color:#fff;\n"
        "}\n"
        "#centralwidget{\n"
        "    background-color:#1f232a;\n"
        "}\n"
        "#leftMenuSubContainer{\n"
        "    background-color:#16191d;\n"
        "}\n"
        "#leftMenuSubContainer QPushButton{\n"
        "    text-align: left;\n"
        "    padding: 5px 10px;\n"
        "    border-top-left-radius:10px;\n"
        "    border-bottom-left-radius:10px;\n"
        "}\n"
        "#headerContainer{\n"
        "    background-color:#2c313c;\n"
        "}\n"
        "")
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                self.centralwidget.setStyleSheet("")
                self.centralwidget.setObjectName("centralwidget")
                self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
                self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
                self.horizontalLayout.setSpacing(0)
                self.horizontalLayout.setObjectName("horizontalLayout")
                self.leftMenuContainer = QtWidgets.QWidget(self.centralwidget)
                self.leftMenuContainer.setObjectName("leftMenuContainer")
                self.verticalLayout = QtWidgets.QVBoxLayout(self.leftMenuContainer)
                self.verticalLayout.setContentsMargins(0, 0, 0, 0)
                self.verticalLayout.setSpacing(0)
                self.verticalLayout.setObjectName("verticalLayout")
                self.leftMenuSubContainer = QtWidgets.QWidget(self.leftMenuContainer)
                self.leftMenuSubContainer.setObjectName("leftMenuSubContainer")
                self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.leftMenuSubContainer)
                self.verticalLayout_2.setContentsMargins(10, 0, 0, 0)
                self.verticalLayout_2.setSpacing(0)
                self.verticalLayout_2.setObjectName("verticalLayout_2")
                self.contactFrame = QtWidgets.QFrame(self.leftMenuSubContainer)
                self.contactFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.contactFrame.setFrameShadow(QtWidgets.QFrame.Raised)
                self.contactFrame.setObjectName("contactFrame")
                self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.contactFrame)
                self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
                self.verticalLayout_3.setSpacing(0)
                self.verticalLayout_3.setObjectName("verticalLayout_3")
                self.contactBtn = QtWidgets.QPushButton(self.contactFrame)
                font = QtGui.QFont()
                font.setPointSize(16)
                self.contactBtn.setFont(font)
                self.contactBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.contactBtn.setText("")
                self.contactBtn.setIconSize(QtCore.QSize(32, 32))
                self.contactBtn.setObjectName("contactBtn")
                self.verticalLayout_3.addWidget(self.contactBtn)
                self.verticalLayout_2.addWidget(self.contactFrame, 0, QtCore.Qt.AlignTop)
                self.leftButtonsFrame = QtWidgets.QFrame(self.leftMenuSubContainer)
                self.leftButtonsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.leftButtonsFrame.setFrameShadow(QtWidgets.QFrame.Raised)
                self.leftButtonsFrame.setObjectName("leftButtonsFrame")
                self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.leftButtonsFrame)
                self.verticalLayout_4.setContentsMargins(0, 10, 0, 10)
                self.verticalLayout_4.setSpacing(0)
                self.verticalLayout_4.setObjectName("verticalLayout_4")
                self.inputBtn = QtWidgets.QPushButton(self.leftButtonsFrame,clicked = lambda : self.showSearchTab())
                font = QtGui.QFont()
                font.setPointSize(16)
                self.inputBtn.setFont(font)
                self.inputBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.inputBtn.setStyleSheet("background-color:#1f232a;")                                
                self.inputBtn.setObjectName("inputBtn")
                self.verticalLayout_4.addWidget(self.inputBtn)

                self.multiLineTabBtn = QtWidgets.QPushButton(self.leftButtonsFrame,clicked = lambda : self.showMultiLineTab())
                self.multiLineTabBtn.setObjectName(u"pushButton")
                self.multiLineTabBtn.setFont(font)
                self.multiLineTabBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))

                self.verticalLayout_4.addWidget(self.multiLineTabBtn)

                self.outputBtn = QtWidgets.QPushButton(self.leftButtonsFrame, clicked = lambda : self.showGenerateTab())
                font = QtGui.QFont()
                font.setPointSize(16)
                self.outputBtn.setFont(font)
                self.outputBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/icons/feather/message-square.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.outputBtn.setIcon(icon1)
                self.outputBtn.setIconSize(QtCore.QSize(32, 32))
                self.outputBtn.setObjectName("outputBtn")
                self.verticalLayout_4.addWidget(self.outputBtn)

                self.Times3Btn = QtWidgets.QPushButton(self.leftButtonsFrame, clicked = lambda : self.show3TimesTab())
                self.Times3Btn.setObjectName(u"Times3")
                self.Times3Btn.setFont(font)
                self.Times3Btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))

                self.verticalLayout_4.addWidget(self.Times3Btn)

                self.verticalLayout_2.addWidget(self.leftButtonsFrame, 0, QtCore.Qt.AlignTop)
                spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
                self.verticalLayout_2.addItem(spacerItem)
                self.helpFrame = QtWidgets.QFrame(self.leftMenuSubContainer)
                self.helpFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.helpFrame.setFrameShadow(QtWidgets.QFrame.Raised)
                self.helpFrame.setObjectName("helpFrame")
                self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.helpFrame)
                self.verticalLayout_5.setContentsMargins(0, 10, 0, 10)
                self.verticalLayout_5.setSpacing(0)
                self.verticalLayout_5.setObjectName("verticalLayout_5")
                self.verticalLayout_2.addWidget(self.helpFrame, 0, QtCore.Qt.AlignBottom)
                self.verticalLayout.addWidget(self.leftMenuSubContainer, 0, QtCore.Qt.AlignLeft)
                self.horizontalLayout.addWidget(self.leftMenuContainer, 0, QtCore.Qt.AlignLeft)
                self.mainBodyContainer = QtWidgets.QWidget(self.centralwidget)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.mainBodyContainer.sizePolicy().hasHeightForWidth())
                self.mainBodyContainer.setSizePolicy(sizePolicy)
                self.mainBodyContainer.setStyleSheet("")
                self.mainBodyContainer.setObjectName("mainBodyContainer")
                self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.mainBodyContainer)
                self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
                self.verticalLayout_6.setSpacing(0)
                self.verticalLayout_6.setObjectName("verticalLayout_6")
                self.headerContainer = QtWidgets.QWidget(self.mainBodyContainer)
                self.headerContainer.setObjectName("headerContainer")
                self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.headerContainer)
                self.horizontalLayout_3.setObjectName("horizontalLayout_3")
                self.logoFrame = QtWidgets.QFrame(self.headerContainer)
                self.logoFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.logoFrame.setFrameShadow(QtWidgets.QFrame.Raised)
                self.logoFrame.setObjectName("logoFrame")
                self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.logoFrame)
                self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
                self.horizontalLayout_4.setSpacing(0)
                self.horizontalLayout_4.setObjectName("horizontalLayout_4")
                self.logoLabel = QtWidgets.QLabel(self.logoFrame)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.logoLabel.sizePolicy().hasHeightForWidth())
                self.logoLabel.setSizePolicy(sizePolicy)
                self.logoLabel.setMaximumSize(QtCore.QSize(40, 30))
                self.logoLabel.setText("")
                self.logoLabel.setPixmap(QtGui.QPixmap(":/icons/feather/gulfgoleasingandfunding_1.jpg"))
                self.logoLabel.setScaledContents(True)
                self.logoLabel.setObjectName("logoLabel")
                self.horizontalLayout_4.addWidget(self.logoLabel)
                self.companyNameLabel = QtWidgets.QLabel(self.logoFrame)
                font = QtGui.QFont()
                font.setPointSize(14)
                font.setBold(True)
                font.setWeight(75)
                self.companyNameLabel.setFont(font)
                self.companyNameLabel.setAlignment(QtCore.Qt.AlignCenter)
                self.companyNameLabel.setObjectName("companyNameLabel")
                self.horizontalLayout_4.addWidget(self.companyNameLabel)
                self.horizontalLayout_3.addWidget(self.logoFrame, 0, QtCore.Qt.AlignLeft)
                self.profileFrame = QtWidgets.QFrame(self.headerContainer)
                self.profileFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.profileFrame.setFrameShadow(QtWidgets.QFrame.Raised)
                self.profileFrame.setObjectName("profileFrame")
                self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.profileFrame)
                self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
                self.horizontalLayout_2.setSpacing(6)
                self.horizontalLayout_2.setObjectName("horizontalLayout_2")
                self.profileButton = QtWidgets.QPushButton(self.profileFrame)
                self.profileButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.profileButton.setText("")
                self.profileButton.setIconSize(QtCore.QSize(32, 32))
                self.profileButton.setObjectName("profileButton")
                self.horizontalLayout_2.addWidget(self.profileButton)
                self.horizontalLayout_3.addWidget(self.profileFrame, 0, QtCore.Qt.AlignRight)
                self.verticalLayout_6.addWidget(self.headerContainer, 0, QtCore.Qt.AlignTop)
                self.mainBodyContent = QtWidgets.QWidget(self.mainBodyContainer)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.mainBodyContent.sizePolicy().hasHeightForWidth())
                self.mainBodyContent.setSizePolicy(sizePolicy)
                self.mainBodyContent.setObjectName("mainBodyContent")
                self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.mainBodyContent)
                self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
                self.verticalLayout_7.setSpacing(0)
                self.verticalLayout_7.setObjectName("verticalLayout_7")
                self.stackedWidget = QtWidgets.QStackedWidget(self.mainBodyContent)
                self.stackedWidget.setStyleSheet("background-color:#1f232a;")
                self.stackedWidget.setObjectName("stackedWidget")
                self.searchPage = QtWidgets.QWidget()
                self.searchPage.setObjectName("searchPage")
                self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.searchPage)
                self.verticalLayout_9.setObjectName("verticalLayout_9")
                self.verticalLayout_8 = QtWidgets.QVBoxLayout()
                self.verticalLayout_8.setObjectName("verticalLayout_8")
                self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_10.setObjectName("horizontalLayout_10")
                self.label = QtWidgets.QLabel(self.searchPage)
                font = QtGui.QFont()
                font.setPointSize(18)
                font.setBold(True)
                font.setWeight(75)
                self.label.setFont(font)
                self.label.setStyleSheet("color:#E57254;")
                self.label.setObjectName("label")
                self.horizontalLayout_10.addWidget(self.label, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
                self.verticalLayout_8.addLayout(self.horizontalLayout_10)
                self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_8.setObjectName("horizontalLayout_8")
                self.byName_radio = QtWidgets.QRadioButton(self.searchPage)
                font = QtGui.QFont()
                font.setPointSize(14)
                self.byName_radio.setFont(font)
                self.byName_radio.setStyleSheet("margin-left:20px;")
                self.byName_radio.setObjectName("byName_radio")
                self.horizontalLayout_8.addWidget(self.byName_radio, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
                self.byName_edit = QtWidgets.QLineEdit(self.searchPage)
                font = QtGui.QFont()
                font.setPointSize(14)
                self.byName_edit.setFont(font)
                self.byName_edit.setStyleSheet("border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")
                self.byName_edit.setObjectName("byName_edit")
                self.horizontalLayout_8.addWidget(self.byName_edit, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
                self.verticalLayout_8.addLayout(self.horizontalLayout_8)
                self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_7.setObjectName("horizontalLayout_7")
                self.byCombo_radio = QtWidgets.QRadioButton(self.searchPage)
                font = QtGui.QFont()
                font.setPointSize(14)
                self.byCombo_radio.setFont(font)
                self.byCombo_radio.setStyleSheet("margin-left:20px;")
                self.byCombo_radio.setObjectName("byCombo_radio")
                self.horizontalLayout_7.addWidget(self.byCombo_radio, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
                self.byCombo_edit = QtWidgets.QLineEdit(self.searchPage)
                font = QtGui.QFont()
                font.setPointSize(14)
                self.byCombo_edit.setFont(font)
                self.byCombo_edit.setStyleSheet("border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")
                self.byCombo_edit.setObjectName("byCombo_edit")
                self.horizontalLayout_7.addWidget(self.byCombo_edit, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
                self.verticalLayout_8.addLayout(self.horizontalLayout_7)

                self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_15.setObjectName("horizontalLayout_15")
                self.byCombine_radio = QtWidgets.QRadioButton(self.searchPage)
                self.byCombine_radio.setObjectName("byCombine_radio")
                self.byCombine_radio.setFont(font)
                self.byCombine_radio.setStyleSheet("margin-left:20px;")

                self.horizontalLayout_15.addWidget(self.byCombine_radio, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)

                self.byCombineName_edit = QtWidgets.QLineEdit(self.searchPage)
                self.byCombineName_edit.setObjectName("byCombineName_edit")
                self.byCombineName_edit.setFont(font)
                self.byCombineName_edit.setStyleSheet("border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")

                self.horizontalLayout_15.addWidget(self.byCombineName_edit, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)

                self.byCombineCombo_edit = QtWidgets.QLineEdit(self.searchPage)
                self.byCombineCombo_edit.setObjectName("byCombineCombo_edit")
                self.byCombineCombo_edit.setFont(font)
                self.byCombineCombo_edit.setStyleSheet("border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")

                self.horizontalLayout_15.addWidget(self.byCombineCombo_edit, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)

                self.verticalLayout_8.addLayout(self.horizontalLayout_15)

                self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_9.setObjectName("horizontalLayout_9")
                self.filePath_edit = QtWidgets.QLineEdit(self.searchPage)
                font = QtGui.QFont()
                font.setPointSize(14)
                self.filePath_edit.setFont(font)
                self.filePath_edit.setStyleSheet("border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:40px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")
                self.filePath_edit.setObjectName("filePath_edit")
                self.horizontalLayout_9.addWidget(self.filePath_edit, 0, QtCore.Qt.AlignVCenter)
                self.browseBtn = QtWidgets.QPushButton(self.searchPage, clicked = lambda : self.browseBtnPressed())
                font = QtGui.QFont()
                font.setPointSize(16)
                self.browseBtn.setFont(font)
                self.browseBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.browseBtn.setStyleSheet("QPushButton{\n"
        "border:2px solid white;\n"
        "border-radius:10px;\n"
        "padding-left:18px;\n"
        "padding-right:18px;\n"
        "padding-top:5px;\n"
        "padding-bottom:5px;\n"
        "margin-left:5px;\n"
        "margin-right:25px;\n"
        "background-color: rgb(79, 79, 79)\n"
        "}\n"
        "\n"
        "QPushButton:hover{\n"
        "background-color:#E57254;\n"
        "}")
                self.browseBtn.setObjectName("browseBtn")
                self.horizontalLayout_9.addWidget(self.browseBtn, 0, QtCore.Qt.AlignVCenter)
                self.verticalLayout_8.addLayout(self.horizontalLayout_9)
                self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_6.setObjectName("horizontalLayout_6")
                self.results_textEdit_search = QtWidgets.QTextEdit(self.searchPage)
                font = QtGui.QFont()
                font.setPointSize(12)
                self.results_textEdit_search.setFont(font)
                self.results_textEdit_search.setStyleSheet("border : 2px solid white;\n"
        "border-radius : 20px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;")
                self.results_textEdit_search.setReadOnly(True)
                self.results_textEdit_search.setTabStopWidth(80)
                self.results_textEdit_search.setObjectName("results_textEdit_search")
                self.horizontalLayout_6.addWidget(self.results_textEdit_search, 0, QtCore.Qt.AlignVCenter)
                self.verticalLayout_8.addLayout(self.horizontalLayout_6)
                self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_5.setObjectName("horizontalLayout_5")

                self.searchBtn = QtWidgets.QPushButton(self.searchPage, clicked = lambda : self.searchBtnPressed())
                font = QtGui.QFont()
                font.setPointSize(16)
                self.searchBtn.setFont(font)
                self.searchBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.searchBtn.setStyleSheet("QPushButton{\n"
        "border:2px solid white;\n"
        "border-radius:10px;\n"
        "padding-left:25px;\n"
        "padding-right:25px;\n"
        "padding-top:5px;\n"
        "padding-bottom:5px;\n"
        "margin-left:5px;\n"
        "margin-right:5px;\n"
        "background-color: rgb(79, 79, 79)\n"
        "}\n"
        "\n"
        "QPushButton:hover{\n"
        "background-color:#23C99A;\n"
        "}")
                self.searchBtn.setObjectName("searchBtn")
                self.horizontalLayout_5.addWidget(self.searchBtn, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
                self.verticalLayout_8.addLayout(self.horizontalLayout_5)
                self.verticalLayout_8.setStretch(0, 2)
                self.verticalLayout_8.setStretch(1, 2)
                self.verticalLayout_8.setStretch(2, 2)
                self.verticalLayout_8.setStretch(3, 2)
                self.verticalLayout_8.setStretch(4, 2)
                self.verticalLayout_8.setStretch(5, 2)
                self.verticalLayout_9.addLayout(self.verticalLayout_8)
                self.stackedWidget.addWidget(self.searchPage)

                
                self.multiLinePage = QtWidgets.QWidget()
                self.multiLinePage.setObjectName(u"multiLinePage")
                self.horizontalLayout_18 = QtWidgets.QHBoxLayout(self.multiLinePage)
                self.horizontalLayout_18.setObjectName(u"horizontalLayout_18")
                self.verticalLayout_12 = QtWidgets.QVBoxLayout()
                self.verticalLayout_12.setObjectName(u"verticalLayout_12")
                self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_16.setObjectName(u"horizontalLayout_16")
                self.label_3 = QtWidgets.QLabel(self.multiLinePage)
                self.label_3.setObjectName(u"label_3")
                font2 = QtGui.QFont()
                font2.setPointSize(18)
                font2.setBold(True)
                font2.setWeight(75)
                self.label_3.setFont(font2)
                self.label_3.setStyleSheet(u"color:#E57254;")

                self.horizontalLayout_16.addWidget(self.label_3, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)


                self.verticalLayout_12.addLayout(self.horizontalLayout_16)

                self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_17.setObjectName(u"horizontalLayout_17")
                self.byNameMulti_radio = QtWidgets.QRadioButton(self.multiLinePage)
                self.byNameMulti_radio.setObjectName(u"byName_radio_2")
                font3 = QtGui.QFont()
                font3.setPointSize(14)
                self.byNameMulti_radio.setFont(font3)
                self.byNameMulti_radio.setStyleSheet(u"margin-left:20px;")

                self.horizontalLayout_17.addWidget(self.byNameMulti_radio, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)

                self.byNameMulti_edit = QtWidgets.QLineEdit(self.multiLinePage)
                self.byNameMulti_edit.setObjectName(u"byNameMulti_edit")
                self.byNameMulti_edit.setFont(font3)
                self.byNameMulti_edit.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")

                self.horizontalLayout_17.addWidget(self.byNameMulti_edit, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)


                self.verticalLayout_12.addLayout(self.horizontalLayout_17)

                self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_20.setObjectName(u"horizontalLayout_20")
                self.filePathMulti_edit = QtWidgets.QLineEdit(self.multiLinePage)
                self.filePathMulti_edit.setObjectName(u"filePathMulti_edit")
                self.filePathMulti_edit.setFont(font3)
                self.filePathMulti_edit.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:40px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")

                self.horizontalLayout_20.addWidget(self.filePathMulti_edit, 0, QtCore.Qt.AlignVCenter)

                self.browseMultiBtn = QtWidgets.QPushButton(self.multiLinePage, clicked = lambda : self.browseBtnPressed_2())
                self.browseMultiBtn.setObjectName(u"browseMultiBtn")
                self.browseMultiBtn.setFont(font)
                self.browseMultiBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.browseMultiBtn.setStyleSheet(u"QPushButton{\n"
        "border:2px solid white;\n"
        "border-radius:10px;\n"
        "padding-left:18px;\n"
        "padding-right:18px;\n"
        "padding-top:5px;\n"
        "padding-bottom:5px;\n"
        "margin-left:5px;\n"
        "margin-right:25px;\n"
        "background-color: rgb(79, 79, 79)\n"
        "}\n"
        "\n"
        "QPushButton:hover{\n"
        "background-color:#E57254;\n"
        "}")

                self.horizontalLayout_20.addWidget(self.browseMultiBtn, 0, QtCore.Qt.AlignVCenter)


                self.verticalLayout_12.addLayout(self.horizontalLayout_20)

                self.horizontalLayout_21 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_21.setObjectName(u"horizontalLayout_21")
                self.results_textEdit_multi = QtWidgets.QTextEdit(self.multiLinePage)
                self.results_textEdit_multi.setObjectName(u"results_textEdit_multi")
                font4 = QtGui.QFont()
                font4.setPointSize(12)
                self.results_textEdit_multi.setFont(font4)
                self.results_textEdit_multi.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 20px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;")
                self.results_textEdit_multi.setReadOnly(True)
                self.results_textEdit_multi.setTabStopWidth(80)

                self.horizontalLayout_21.addWidget(self.results_textEdit_multi, 0, QtCore.Qt.AlignVCenter)


                self.verticalLayout_12.addLayout(self.horizontalLayout_21)

                self.horizontalLayout_22 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_22.setObjectName(u"horizontalLayout_22")
                self.searchMultiBtn = QtWidgets.QPushButton(self.multiLinePage, clicked = lambda : self.multiLineSearch())
                self.searchMultiBtn.setObjectName(u"searchMultiBtn")
                self.searchMultiBtn.setFont(font)
                self.searchMultiBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.searchMultiBtn.setStyleSheet(u"QPushButton{\n"
        "border:2px solid white;\n"
        "border-radius:10px;\n"
        "padding-left:25px;\n"
        "padding-right:25px;\n"
        "padding-top:5px;\n"
        "padding-bottom:5px;\n"
        "margin-left:5px;\n"
        "margin-right:5px;\n"
        "background-color: rgb(79, 79, 79)\n"
        "}\n"
        "\n"
        "QPushButton:hover{\n"
        "background-color:#23C99A;\n"
        "}")

                self.horizontalLayout_22.addWidget(self.searchMultiBtn, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)


                self.verticalLayout_12.addLayout(self.horizontalLayout_22)

                self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_19.setObjectName(u"horizontalLayout_19")
                self.label_4 = QtWidgets.QLabel(self.multiLinePage)
                self.label_4.setObjectName(u"label_4")
                self.label_4.setFont(font3)
                self.label_4.setStyleSheet(u"margin-left:20px")

                self.horizontalLayout_19.addWidget(self.label_4, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)

                self.filterBy_edit = QtWidgets.QLineEdit(self.multiLinePage)
                self.filterBy_edit.setObjectName(u"filterBy_edit")
                self.filterBy_edit.setFont(font3)
                self.filterBy_edit.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
                self.filterBy_edit.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")

                self.horizontalLayout_19.addWidget(self.filterBy_edit, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)

                self.applyFilterBtn = QtWidgets.QPushButton(self.multiLinePage, clicked = lambda : self.ApplyFilterPressed())
                self.applyFilterBtn.setObjectName(u"applyFilterBtn")
                self.applyFilterBtn.setFont(font)
                self.applyFilterBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.applyFilterBtn.setStyleSheet(u"QPushButton{\n"
        "border:2px solid white;\n"
        "border-radius:10px;\n"
        "padding-left:22px;\n"
        "padding-right:22px;\n"
        "padding-top:5px;\n"
        "padding-bottom:5px;\n"
        "margin-left:5px;\n"
        "margin-right:25px;\n"
        "background-color: rgb(79, 79, 79)\n"
        "}\n"
        "\n"
        "QPushButton:hover{\n"
        "background-color:#23C99A;\n"
        "}")

                self.horizontalLayout_19.addWidget(self.applyFilterBtn, 0, QtCore.Qt.AlignRight|QtCore.Qt.AlignVCenter)


                self.verticalLayout_12.addLayout(self.horizontalLayout_19)

                self.horizontalLayout_23 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_23.setObjectName(u"horizontalLayout_23")
                self.textEdit = QtWidgets.QTextEdit(self.multiLinePage)
                self.textEdit.setObjectName(u"textEdit")
                self.textEdit.setFont(font4)
                self.textEdit.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 20px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;")
                self.textEdit.setReadOnly(True)

                self.horizontalLayout_23.addWidget(self.textEdit)


                self.verticalLayout_12.addLayout(self.horizontalLayout_23)

                self.verticalLayout_12.setStretch(0, 1)
                self.verticalLayout_12.setStretch(1, 2)
                self.verticalLayout_12.setStretch(2, 2)
                self.verticalLayout_12.setStretch(3, 4)
                self.verticalLayout_12.setStretch(4, 2)
                self.verticalLayout_12.setStretch(5, 2)
                self.verticalLayout_12.setStretch(6, 2)

                self.horizontalLayout_18.addLayout(self.verticalLayout_12)

                self.stackedWidget.addWidget(self.multiLinePage)


                self.Times3_Page = QtWidgets.QWidget()
                self.Times3_Page.setObjectName(u"Times3_Page")
                self.horizontalLayout_31 = QtWidgets.QHBoxLayout(self.Times3_Page)
                self.horizontalLayout_31.setObjectName(u"horizontalLayout_31")
                self.verticalLayout_13 = QtWidgets.QVBoxLayout()
                self.verticalLayout_13.setObjectName(u"verticalLayout_13")
                self.horizontalLayout_24 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_24.setObjectName(u"horizontalLayout_24")
                self.label_5 = QtWidgets.QLabel(self.Times3_Page)
                self.label_5.setObjectName(u"label_5")
                self.label_5.setFont(font2)
                self.label_5.setStyleSheet(u"color:#E57254;")

                self.horizontalLayout_24.addWidget(self.label_5, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)


                self.verticalLayout_13.addLayout(self.horizontalLayout_24)

                self.horizontalLayout_25 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_25.setObjectName(u"horizontalLayout_25")
                self.radio_byName_3T = QtWidgets.QRadioButton(self.Times3_Page)
                self.radio_byName_3T.setObjectName(u"radio_byName_3T")
                self.radio_byName_3T.setFont(font3)
                self.radio_byName_3T.setStyleSheet(u"margin-left:20px;")

                self.horizontalLayout_25.addWidget(self.radio_byName_3T, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)

                self.lineEdit_Name_3T = QtWidgets.QLineEdit(self.Times3_Page)
                self.lineEdit_Name_3T.setObjectName(u"lineEdit_Name_3T")
                self.lineEdit_Name_3T.setFont(font3)
                self.lineEdit_Name_3T.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")

                self.horizontalLayout_25.addWidget(self.lineEdit_Name_3T, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)

                self.horizontalLayout_25.setStretch(0, 1)
                self.horizontalLayout_25.setStretch(1, 2)

                self.verticalLayout_13.addLayout(self.horizontalLayout_25)

                self.horizontalLayout_26 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_26.setObjectName(u"horizontalLayout_26")
                self.lineEdit_filePath_3T = QtWidgets.QLineEdit(self.Times3_Page)
                self.lineEdit_filePath_3T.setObjectName(u"lineEdit_filePath_3T")
                self.lineEdit_filePath_3T.setFont(font3)
                self.lineEdit_filePath_3T.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:40px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")

                self.horizontalLayout_26.addWidget(self.lineEdit_filePath_3T, 0, QtCore.Qt.AlignVCenter)

                self.btn_browse_3T = QtWidgets.QPushButton(self.Times3_Page, clicked = lambda : self.browseBtnPressed_3())
                self.btn_browse_3T.setObjectName(u"btn_browse_3T")
                self.btn_browse_3T.setFont(font)
                self.btn_browse_3T.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.btn_browse_3T.setStyleSheet(u"QPushButton{\n"
        "border:2px solid white;\n"
        "border-radius:10px;\n"
        "padding-left:18px;\n"
        "padding-right:18px;\n"
        "padding-top:5px;\n"
        "padding-bottom:5px;\n"
        "margin-left:5px;\n"
        "margin-right:25px;\n"
        "background-color: rgb(79, 79, 79)\n"
        "}\n"
        "\n"
        "QPushButton:hover{\n"
        "background-color:#E57254;\n"
        "}")

                self.horizontalLayout_26.addWidget(self.btn_browse_3T, 0, QtCore.Qt.AlignVCenter)


                self.verticalLayout_13.addLayout(self.horizontalLayout_26)

                self.horizontalLayout_27 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_27.setObjectName(u"horizontalLayout_27")
                self.textEdit_results_3T = QtWidgets.QTextEdit(self.Times3_Page)
                self.textEdit_results_3T.setObjectName(u"textEdit_results_3T")
                self.textEdit_results_3T.setFont(font4)
                self.textEdit_results_3T.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 20px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;")
                self.textEdit_results_3T.setReadOnly(True)
                self.textEdit_results_3T.setTabStopWidth(80)

                self.horizontalLayout_27.addWidget(self.textEdit_results_3T, 0, QtCore.Qt.AlignVCenter)


                self.verticalLayout_13.addLayout(self.horizontalLayout_27)

                self.horizontalLayout_28 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_28.setObjectName(u"horizontalLayout_28")
                self.btn_search_3T = QtWidgets.QPushButton(self.Times3_Page , clicked = lambda : self.multiLineSearch_3Times())
                self.btn_search_3T.setObjectName(u"btn_search_3T")
                self.btn_search_3T.setFont(font)
                self.btn_search_3T.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.btn_search_3T.setStyleSheet(u"QPushButton{\n"
        "border:2px solid white;\n"
        "border-radius:10px;\n"
        "padding-left:25px;\n"
        "padding-right:25px;\n"
        "padding-top:5px;\n"
        "padding-bottom:5px;\n"
        "margin-left:5px;\n"
        "margin-right:5px;\n"
        "background-color: rgb(79, 79, 79)\n"
        "}\n"
        "\n"
        "QPushButton:hover{\n"
        "background-color:#23C99A;\n"
        "}")

                self.horizontalLayout_28.addWidget(self.btn_search_3T, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)


                self.verticalLayout_13.addLayout(self.horizontalLayout_28)

                self.horizontalLayout_29 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_29.setObjectName(u"horizontalLayout_29")
                self.label_6 = QtWidgets.QLabel(self.Times3_Page)
                self.label_6.setObjectName(u"label_6")
                self.label_6.setFont(font3)
                self.label_6.setStyleSheet(u"margin-left:20px")

                self.horizontalLayout_29.addWidget(self.label_6, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)

                self.lineEdit_number_3T = QtWidgets.QLineEdit(self.Times3_Page)
                self.lineEdit_number_3T.setObjectName(u"lineEdit_number_3T")
                self.lineEdit_number_3T.setFont(font3)
                self.lineEdit_number_3T.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
                self.lineEdit_number_3T.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")

                self.horizontalLayout_29.addWidget(self.lineEdit_number_3T, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)

                self.btn_apply_3T = QtWidgets.QPushButton(self.Times3_Page, clicked= lambda : self.ApplyFilterPressed_3Times())
                self.btn_apply_3T.setObjectName(u"btn_apply_3T")
                self.btn_apply_3T.setFont(font)
                self.btn_apply_3T.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.btn_apply_3T.setStyleSheet(u"QPushButton{\n"
        "border:2px solid white;\n"
        "border-radius:10px;\n"
        "padding-left:22px;\n"
        "padding-right:22px;\n"
        "padding-top:5px;\n"
        "padding-bottom:5px;\n"
        "margin-left:5px;\n"
        "margin-right:25px;\n"
        "background-color: rgb(79, 79, 79)\n"
        "}\n"
        "\n"
        "QPushButton:hover{\n"
        "background-color:#23C99A;\n"
        "}")

                self.horizontalLayout_29.addWidget(self.btn_apply_3T, 0, QtCore.Qt.AlignRight|QtCore.Qt.AlignVCenter)

                self.horizontalLayout_29.setStretch(0, 1)
                self.horizontalLayout_29.setStretch(1, 9)

                self.verticalLayout_13.addLayout(self.horizontalLayout_29)

                self.horizontalLayout_30 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_30.setObjectName(u"horizontalLayout_30")
                self.textEdit_filterResults_3T = QtWidgets.QTextEdit(self.Times3_Page)
                self.textEdit_filterResults_3T.setObjectName(u"textEdit_filterResults_3T")
                self.textEdit_filterResults_3T.setFont(font4)
                self.textEdit_filterResults_3T.setStyleSheet(u"border : 2px solid white;\n"
        "border-radius : 20px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;")
                self.textEdit_filterResults_3T.setReadOnly(True)

                self.horizontalLayout_30.addWidget(self.textEdit_filterResults_3T)


                self.verticalLayout_13.addLayout(self.horizontalLayout_30)

                self.verticalLayout_13.setStretch(0, 1)
                self.verticalLayout_13.setStretch(1, 2)
                self.verticalLayout_13.setStretch(2, 2)
                self.verticalLayout_13.setStretch(3, 4)
                self.verticalLayout_13.setStretch(4, 2)
                self.verticalLayout_13.setStretch(5, 2)
                self.verticalLayout_13.setStretch(6, 2)

                self.horizontalLayout_31.addLayout(self.verticalLayout_13)

                self.stackedWidget.addWidget(self.Times3_Page)

                self.generatePage = QtWidgets.QWidget()
                self.generatePage.setObjectName("generatePage")
                self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.generatePage)
                self.verticalLayout_11.setObjectName("verticalLayout_11")
                self.verticalLayout_10 = QtWidgets.QVBoxLayout()
                self.verticalLayout_10.setObjectName("verticalLayout_10")
                self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_14.setObjectName("horizontalLayout_14")
                self.label_2 = QtWidgets.QLabel(self.generatePage)
                font = QtGui.QFont()
                font.setPointSize(18)
                font.setBold(True)
                font.setWeight(75)
                self.label_2.setFont(font)
                self.label_2.setStyleSheet("color:#E57254;")
                self.label_2.setObjectName("label_2")
                self.horizontalLayout_14.addWidget(self.label_2, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
                self.verticalLayout_10.addLayout(self.horizontalLayout_14)
                self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_13.setObjectName("horizontalLayout_13")
                self.lowerLimit_edit = QtWidgets.QLineEdit(self.generatePage)
                font = QtGui.QFont()
                font.setPointSize(14)
                self.lowerLimit_edit.setFont(font)
                self.lowerLimit_edit.setStyleSheet("border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:40px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")
                self.lowerLimit_edit.setObjectName("lowerLimit_edit")
                self.horizontalLayout_13.addWidget(self.lowerLimit_edit, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
                self.upperLimit_edit = QtWidgets.QLineEdit(self.generatePage)
                font = QtGui.QFont()
                font.setPointSize(14)
                self.upperLimit_edit.setFont(font)
                self.upperLimit_edit.setStyleSheet("border : 2px solid white;\n"
        "border-radius : 10px;\n"
        "margin-left:20px;\n"
        "margin-right:40px;\n"
        "padding:5px;\n"
        "background-color:#16191d;\n"
        "color:#46BCDE;")
                self.upperLimit_edit.setObjectName("upperLimit_edit")
                self.horizontalLayout_13.addWidget(self.upperLimit_edit, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
                self.verticalLayout_10.addLayout(self.horizontalLayout_13)
                self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_12.setObjectName("horizontalLayout_12")
                self.results_textEdit_generate = QtWidgets.QTextEdit(self.generatePage)
                self.results_textEdit_generate.setReadOnly(True)                
                self.results_textEdit_generate.setFont(font)
                self.results_textEdit_generate.setStyleSheet("border : 2px solid white;\n"
        "border-radius : 20px;\n"
        "margin-left:20px;\n"
        "margin-right:20px;\n"
        "padding:5px;\n"
        "background-color:#16191d;")
                self.results_textEdit_generate.setObjectName("results_textEdit_generate")
                self.horizontalLayout_12.addWidget(self.results_textEdit_generate)
                self.verticalLayout_10.addLayout(self.horizontalLayout_12)
                self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_11.setObjectName("horizontalLayout_11")
                self.generateBtn = QtWidgets.QPushButton(self.generatePage,clicked = lambda : self.generateBtnPressed())
                font = QtGui.QFont()
                font.setPointSize(16)
                self.generateBtn.setFont(font)
                self.generateBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                self.generateBtn.setStyleSheet("QPushButton{\n"
        "border:2px solid white;\n"
        "border-radius:10px;\n"
        "padding-left:25px;\n"
        "padding-right:25px;\n"
        "padding-top:5px;\n"
        "padding-bottom:5px;\n"
        "margin-left:5px;\n"
        "margin-right:5px;\n"
        "background-color: rgb(79, 79, 79)\n"
        "}\n"
        "\n"
        "QPushButton:hover{\n"
        "background-color:#23C99A;\n"
        "}")
                self.generateBtn.setObjectName("generateBtn")
                self.horizontalLayout_11.addWidget(self.generateBtn, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
                self.verticalLayout_10.addLayout(self.horizontalLayout_11)
                self.verticalLayout_10.setStretch(0, 1)
                self.verticalLayout_10.setStretch(1, 1)
                self.verticalLayout_10.setStretch(2, 1)
                self.verticalLayout_10.setStretch(3, 2)
                self.verticalLayout_11.addLayout(self.verticalLayout_10)
                self.stackedWidget.addWidget(self.generatePage)
                self.verticalLayout_7.addWidget(self.stackedWidget)
                self.verticalLayout_6.addWidget(self.mainBodyContent)
                self.horizontalLayout.addWidget(self.mainBodyContainer)
                MainWindow.setCentralWidget(self.centralwidget)
                
                self.repeatedPairsMultiLine = False
                self.retranslateUi(MainWindow)
                self.stackedWidget.setCurrentIndex(0)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "Combo Helper"))
                self.contactBtn.setToolTip(_translate("MainWindow", "Contact Info"))
                self.inputBtn.setToolTip(_translate("MainWindow", "SMS"))
                self.inputBtn.setText(_translate("MainWindow", "Search"))
                self.outputBtn.setToolTip(_translate("MainWindow", "MMS"))
                self.outputBtn.setText(_translate("MainWindow", "Generate"))
                self.companyNameLabel.setText(_translate("MainWindow", "  www.fiverr.com/code_of_duty"))
                self.profileButton.setToolTip(_translate("MainWindow", "Profile"))
                self.label.setText(_translate("MainWindow", "Combination Finder"))
                self.byName_radio.setText(_translate("MainWindow", "Search by Name"))
                self.byName_edit.setPlaceholderText(_translate("MainWindow", "Enter Name"))
                self.byCombo_radio.setText(_translate("MainWindow", "Search by Combination"))
                self.byCombo_edit.setPlaceholderText(_translate("MainWindow", "Enter Combination"))
                self.byCombine_radio.setText(_translate("MainWindow", "Combine Search"))                
                self.byCombineName_edit.setPlaceholderText(_translate("MainWindow", "Enter Name"))
                self.byCombineCombo_edit.setPlaceholderText(_translate("MainWindow", "Enter Combination"))
                self.filePath_edit.setPlaceholderText(_translate("MainWindow", "Text File Path"))
                self.browseBtn.setText(_translate("MainWindow", "Browse"))
                self.results_textEdit_search.setPlaceholderText(_translate("MainWindow", "Results"))
                self.searchBtn.setText(_translate("MainWindow", "Search"))
                self.label_2.setText(_translate("MainWindow", "Combination Generator"))
                self.lowerLimit_edit.setPlaceholderText(_translate("MainWindow", "Lower limit"))
                self.upperLimit_edit.setPlaceholderText(_translate("MainWindow", "Upper limit"))
                self.results_textEdit_generate.setPlaceholderText(_translate("MainWindow", "Results"))
                self.generateBtn.setText(_translate("MainWindow", "Generate"))
                self.byNameMulti_radio.setText(_translate("MainWindow", u"Search by Name"))
                self.byNameMulti_edit.setPlaceholderText(_translate("MainWindow", u"Enter Name"))
                self.filePathMulti_edit.setPlaceholderText(_translate("MainWindow", u"Text File Path"))
                self.browseMultiBtn.setText(_translate("MainWindow", u"Browse"))
                self.results_textEdit_multi.setPlaceholderText(_translate("MainWindow", u"Results"))
                self.searchMultiBtn.setText(_translate("MainWindow", u"Search"))
                self.multiLineTabBtn.setText(_translate("MainWindow", u"Multi Line"))
                self.label_3.setText(_translate("MainWindow", u"Multi Line Search"))
                self.label_4.setText(_translate("MainWindow", u"Fitler by:"))
                self.filterBy_edit.setPlaceholderText(_translate("MainWindow", u"Enter Number"))
                self.applyFilterBtn.setText(_translate("MainWindow", u"Apply"))

                self.label_5.setText(_translate("MainWindow", u"3 Times Search"))
                self.radio_byName_3T.setText(_translate("MainWindow", u"Search by Name"))
                self.lineEdit_Name_3T.setPlaceholderText(_translate("MainWindow", u"Enter Name"))
                self.lineEdit_filePath_3T.setPlaceholderText(_translate("MainWindow", u"Text File Path"))
                self.btn_browse_3T.setText(_translate("MainWindow", u"Browse"))
                self.textEdit_results_3T.setPlaceholderText(_translate("MainWindow", u"Results"))
                self.btn_search_3T.setText(_translate("MainWindow", u"Search"))
                self.label_6.setText(_translate("MainWindow", u"Fitler by:"))
                self.lineEdit_number_3T.setPlaceholderText(_translate("MainWindow", u"Enter Number"))
                self.btn_apply_3T.setText(_translate("MainWindow", u"Apply"))
                self.Times3Btn.setText(_translate("MainWindow", u"3 Times", None))

        # changing tabs
        def showSearchTab(self):
                self.stackedWidget.setCurrentWidget(self.searchPage)
                self.manageBackgroundColor(self.inputBtn)

        def showGenerateTab(self):
                self.stackedWidget.setCurrentWidget(self.generatePage)
                self.manageBackgroundColor(self.outputBtn)

        def showMultiLineTab(self):
                self.stackedWidget.setCurrentWidget(self.multiLinePage)
                self.manageBackgroundColor(self.multiLineTabBtn)

        def show3TimesTab(self):
                self.stackedWidget.setCurrentWidget(self.Times3_Page)
                self.manageBackgroundColor(self.Times3Btn)                

        # General Function to manage background colors        
        def manageBackgroundColor(self,QPushButton):                
                allButtons = [self.inputBtn,self.outputBtn,self.multiLineTabBtn]                
                for i in allButtons:                     
                        i.setStyleSheet("background-color:none;")
                QPushButton.setStyleSheet("background-color:#1f232a;")

        # assigning path to path field
        def assignPath(self,field):
                filename,_ = QtWidgets.QFileDialog.getOpenFileName(None,'Open File','','Text File (*.txt)')

                if filename:
                        field.setText(filename)
        
        def browseBtnPressed(self):
                self.assignPath(self.filePath_edit)

        def browseBtnPressed_2(self):
                self.assignPath(self.filePathMulti_edit)
                
        def browseBtnPressed_3(self):
                self.assignPath(self.lineEdit_filePath_3T)

        # return repititive pairs in list as a tupple        
        def find_repeated_number_pairs(self,lst):
                pairs = []
                n = len(lst)

                for i in range(n - 1):
                        current_pair = (lst[i], lst[i+1])

                        if current_pair in pairs:
                                continue

                        for j in range(i+2, n-1):
                                next_pair = (lst[j], lst[j+1])

                                if current_pair == next_pair:
                                        pairs.append(current_pair)
                                        break

                return pairs
        # return repititive pairs that appears atleast thrice in list as a tupple        
        def find_repeated_number_pairs_thrice(self,lst):
                pairs = []
                n = len(lst)
                

                for i in range(n - 1):
                        current_pair = (lst[i], lst[i+1])

                        if current_pair in pairs:
                                continue
                        
                        numberOfRepeations = 0

                        for j in range(i+2, n-1):
                                next_pair = (lst[j], lst[j+1])

                                if current_pair == next_pair:
                                        numberOfRepeations += 1
                                        if numberOfRepeations == 2:
                                                pairs.append(current_pair)
                                                break

                return pairs
        
        # handle search button on search page
        def searchBtnPressed(self):
                if self.byName_radio.isChecked() and self.filePath_edit.text() != '' and self.byName_edit.text() != '':
                        textFile = open(f'{self.filePath_edit.text()}','r')
                        Lines = textFile.readlines()
                        nameFound = False
                        for line in Lines:
                                splittedList = line.split('"')                                  # divides the line into 3 sub arrays
                                if line.strip() and self.byName_edit.text() == splittedList[1]: # check if entered name matches name in text file
                                        nameFound = True
                                        editedList = splittedList[2].split(' ')                 # put every number in the array                                        
                                        editedList[-1] = str(editedList[-1]).replace('\n','')
                                        editedList.remove('')
                                        if '' in editedList:
                                                editedList.remove('')
                                        print(editedList)
                                        # editedList = list(map(int, editedList))                 # type casting                                        
                                        repeatedPairs = self.find_repeated_number_pairs(editedList)                                        
                                        break    
                        # printing results into text Edit
                        self.results_textEdit_search.append(f'\n\t\t\t\tResults for {self.byName_edit.text()}')
                        if nameFound:                                                                
                                self.results_textEdit_search.append(f'\n\tRepeated Pairs : {repeatedPairs}')
                        else:
                                self.results_textEdit_search.append('\n\tName not found')
                
                elif self.byCombo_radio.isChecked() and self.filePath_edit.text() != '' and self.byCombo_edit.text() != '':
                        textFile = open(f'{self.filePath_edit.text()}','r')
                        Lines = textFile.readlines()
                        comboFound = False
                        # getting combo from field in tupple form
                        comboToFind = self.byCombo_edit.text().split(' ')
                        comboToFind = (comboToFind[0] , comboToFind[1])
                        # print(comboToFind)
                        
                        FinalResults = []
                        for line in Lines:                                                        
                                if line.strip():
                                        splittedList = line.split('"')                                  # divides the line into 3 sub arrays
                                        editedList = splittedList[2].split(' ')                         # put every number in the array
                                        editedList[-1] = str(editedList[-1]).replace('\n','')
                                        editedList.remove('')
                                        if '' in editedList:
                                                editedList.remove('')
                                        # print(editedList)
                                        # editedList = list(map(int, editedList))                         # type casting
                                        repeatedPairs = self.find_repeated_number_pairs(editedList)
                                        
                                        if comboToFind in repeatedPairs:
                                                comboFound = True
                                                FinalResults.append(splittedList[1])

                        self.results_textEdit_search.append(f'\n\t\t\t\tResults for ({self.byCombo_edit.text()})')
                        if comboFound:
                                self.results_textEdit_search.append(f'\n\tCombo is repeated in : {FinalResults}')
                        else:
                                self.results_textEdit_search.append('\n\tCombo is not repeated')

                elif self.byCombine_radio.isChecked() and self.filePath_edit.text() != '' and self.byCombineName_edit.text() != '' and self.byCombineCombo_edit.text() != '':
                        textFile = open(f'{self.filePath_edit.text()}','r')
                        Lines = textFile.readlines()
                        nameFound = False
                        # getting combo from field in tupple form
                        comboToFind = self.byCombineCombo_edit.text().split(' ')
                        comboToFind = (comboToFind[0] , comboToFind)
                        # print(comboToFind)
                        for line in Lines:
                                splittedList = line.split('"')                                  # divides the line into 3 sub arrays
                                if line.strip() and self.byCombineName_edit.text() == splittedList[1]:                  # check if entered name matches name in text file
                                        nameFound = True
                                        editedList = splittedList[2].split(' ')                 # put every number in the array
                                        editedList[-1] = str(editedList[-1]).replace('\n','')
                                        editedList.remove('')
                                        if '' in editedList:
                                                editedList.remove('')
                                        # print(editedList)
                                        # editedList = list(map(int, editedList))                 # type casting
                                        repeatedPairs = self.find_repeated_number_pairs(editedList)                                        
                                        break    
                        # printing results into text Edit
                        self.results_textEdit_search.append(f'\n\t\t\t\tResults for {comboToFind} in {self.byCombineName_edit.text()}')
                        if nameFound and comboToFind in repeatedPairs:                                                                
                                self.results_textEdit_search.append(f'\n\t{comboToFind} is repeated in {self.byCombineName_edit.text()}')
                        else:
                                self.results_textEdit_search.append('\n\tCombination not found')
                
                else:
                        QtWidgets.QMessageBox.critical(None,'Error','Make sure fields are filled and radio button is checked')
                        
        def generateBtnPressed(self):
                if self.lowerLimit_edit.text() != '' and self.upperLimit_edit.text() != '':
                        digitsList = ['00']
                        for i in range(int(self.lowerLimit_edit.text()),int(self.upperLimit_edit.text())+1):
                                digitsList.append(str(i))
                        # print(digitsList)
                        basename = "combinations"
                        suffix = datetime.datetime.now().strftime("%y%m%d_%H%M%S"+".txt")
                        filename = "_".join([basename, suffix]) # e.g. 'mylogfile_120508_171442'
                        
                        self.results_textEdit_generate.append(f'\n\t\tWriting combinations in {filename}')

                        with open(filename,'a') as the_file:
                                for comb in combinations(digitsList, 2):
                                        the_file.write(str(comb)+'\n')
                        
                        self.results_textEdit_generate.append(f'\n\t\t\t\tComplete !')


                else:
                        QtWidgets.QMessageBox.critical(None,'Error','Make sure fields are filled')

        def multiLineSearch(self):
                if self.filePathMulti_edit.text() != '' and self.byNameMulti_edit.text() != '':                
                        filePath = open(self.filePathMulti_edit.text(),'r')
                        Lines = filePath.readlines()
                        numberOfLines = 0
                        timeDate = []
                        nameFound = False
                        # list for storing all the numbers for given name
                        jumboList = []
                        for line in Lines:
                                splittedList = line.split('"')
                                if line.strip() and self.byNameMulti_edit.text() == splittedList[1]:                  # check if entered name matches name in text file
                                        # print(splittedList)
                                        numberOfLines += 1
                                        nameFound = True
                                        timeDate.append(splittedList[0])
                                        editedList = splittedList[2].split(' ')                 # put every number in the array                                        
                                        # cleaning array
                                        editedList[-1] = str(editedList[-1]).replace('\n','')   
                                        editedList.remove('')
                                        if '' in editedList:
                                                editedList.remove('')
                                        # print(editedList)
                                        # editedList = list(map(int, editedList))                 # type casting
                                        # print(editedList)
                                        jumboList += editedList

                        self.results_textEdit_multi.append(f'\n\t\t\tResults for {self.byNameMulti_edit.text()}\n')
                        if nameFound:
                                print(jumboList)
                                self.repeatedPairsMultiLine = self.find_repeated_number_pairs(jumboList)
                                self.results_textEdit_multi.append(f'\n\t\t{self.byNameMulti_edit.text()} appeared {numberOfLines} times :')
                                for i in timeDate:
                                        self.results_textEdit_multi.append(f'\n\t{i}')
                                self.results_textEdit_multi.append(f'\n\tRepeated Pairs : {self.repeatedPairsMultiLine}')
                        else:
                                self.results_textEdit_multi.append(f'\n\t\tName not Found')

                else:
                        QtWidgets.QMessageBox.critical(None,'Error','Make sure fields are filled')

        def ApplyFilterPressed(self):
                if self.repeatedPairsMultiLine:
                        filteredList = []
                        matched = False
                        for i in self.repeatedPairsMultiLine:
                                if i[0] == self.filterBy_edit.text():
                                        matched = True
                                        filteredList.append(i)
                        if matched:
                                self.textEdit.setText(f'\t Filtered Pairs :\t\t\t{filteredList}')                        
                        else:
                                self.textEdit.setText(f'\t Filtered Pairs :\t\tNone')                        


        def multiLineSearch_3Times(self):
                if self.lineEdit_filePath_3T.text() != '' and self.lineEdit_Name_3T.text() != '':                
                        filePath = open(self.lineEdit_filePath_3T.text(),'r')
                        Lines = filePath.readlines()
                        numberOfLines = 0
                        timeDate = []
                        nameFound = False
                        # list for storing all the numbers for given name
                        jumboList = []
                        for line in Lines:
                                splittedList = line.split('"')
                                if line.strip() and self.lineEdit_Name_3T.text() == splittedList[1]:                  # check if entered name matches name in text file
                                        # print(splittedList)
                                        numberOfLines += 1
                                        nameFound = True
                                        timeDate.append(splittedList[0])
                                        editedList = splittedList[2].split(' ')                 # put every number in the array                                        
                                        # cleaning array
                                        editedList[-1] = str(editedList[-1]).replace('\n','')   
                                        editedList.remove('')
                                        if '' in editedList:
                                                editedList.remove('')
                                        # print(editedList)
                                        # editedList = list(map(int, editedList))                 # type casting
                                        # print(editedList)
                                        jumboList += editedList

                        self.textEdit_results_3T.append(f'\n\t\t\tResults for {self.lineEdit_Name_3T.text()}\n')
                        if nameFound:
                                self.repeatedPairsMultiLine_3Times = self.find_repeated_number_pairs_thrice(jumboList)                                
                                self.textEdit_results_3T.append(f'\n\t\t{self.lineEdit_Name_3T.text()} appeared {numberOfLines} times :')
                                for i in timeDate:
                                        self.textEdit_results_3T.append(f'\n\t{i}')
                                self.textEdit_results_3T.append(f'\n\tRepeated Pairs : {self.repeatedPairsMultiLine_3Times}')
                        else:
                                self.textEdit_results_3T.append(f'\n\t\tName not Found')

                else:
                        QtWidgets.QMessageBox.critical(None,'Error','Make sure fields are filled')

        def ApplyFilterPressed_3Times(self):
                if self.repeatedPairsMultiLine_3Times:
                        filteredList = []
                        matched = False
                        for i in self.repeatedPairsMultiLine_3Times:
                                if i[0] == self.lineEdit_number_3T.text():
                                        matched = True
                                        filteredList.append(i)
                        if matched:
                                self.textEdit_filterResults_3T.setText(f'\t Filtered Pairs :\t\t\t{filteredList}')                        
                        else:
                                self.textEdit_filterResults_3T.setText(f'\t Filtered Pairs :\t\t\tNone')

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
